整数閉区間を示すクラス（あるいは構造体）をつくりたい。
整数閉区間オブジェクトは下端点と上端点を持ち、文字列表現も返せる（例: 下端点 3, 上端点 8 の整数閉区間の文字列表記は "[3,8]"）。
ただし、上端点より下端点が大きい閉区間を作ることはできない。
整数の閉区間は指定した整数を含むかどうかを判定できる。また、別の閉区間と等価かどうかや、完全に含まれるかどうかも判定できる。

- [ ] 整数閉区間の定義を満たすクラスを作成する
  - [ ] 下端点が上端点より小さい整数閉区間オブジェクトを作成出来る
    - [x] [0,1]区間で整数閉区間オブジェクトを作成出来る -> 仮実装
    - [x] [1,2]区間で整数閉区間オブジェクトを作成出来る -> 三角測量
    - [?] 下端点が整数値下限の境界値、上端点が整数値上限の境界値である区間で整数閉区間オブジェクトを作成出来る -> ?
  - [ ] 下端点が上端点と同じ整数閉区間オブジェクトを作成出来る
    - [x] [0,0]区間で整数閉区間オブジェクトを作成出来る -> 仮実装
    - [x] [1,1]区間で整数閉区間オブジェクトを作成出来る -> 三角測量
    - [?] 下端点と上端点が整数値上限の境界値である区間で整数閉区間オブジェクトを作成出来る -> ?
  - [ ] 下端点が上端点より大きい整数閉区間オブジェクトを作成出来ない
    - [x] [1,0]区間で整数閉区間オブジェクトを作成出来ない -> 仮実装
    - [x] [0,-1]区間で整数閉区間オブジェクトを作成出来ない -> 三角測量
    - [?] 下端点が整数値上限の境界値、上端点が整数値下限の境界値である区間で整数閉区間オブジェクトを作成出来る -> ?

- [ ] 整数閉区間オブジェクトが示す整数閉区間の文字列を返せる
  - [x] 下端点3、上端点8の整数閉区間では"[3,8]"を返す -> 仮実装
  - [x] 下端点4、上端点9の整数閉区間では"[4,9]"を返す -> 三角測量

- [ ] 整数の閉区間は指定した整数を含むかどうかを判定できる
  - [x] 整数開区間に存在する整数は整数閉区間内に存在する
    - [x] 0から2の整数開区間に存在する1は、0から2の整数閉区間内に存在する -> 仮実装
    - [x] 1から3の整数開区間に存在する2は、1から3の整数閉区間内に存在する -> 三角測量
  - [x] 下端点の整数は整数閉区間内に存在する
    - [x] 0から2の整数閉区間の下端点0は、0から2の整数閉区間内に存在する -> 仮実装
    - [x] 1から3の整数閉区間の下端点1は、1から3の整数閉区間内に存在する -> 三角測量
  - [x] 上端点の整数は整数閉区間内に存在する
    - [x] 0から2の整数閉区間の上端点2は、0から2の整数閉区間内に存在する -> 仮実装
    - [x] 1から3の整数閉区間の上端点3は、1から3の整数閉区間内に存在する -> 三角測量
  - [ ] 下端点より小さい整数は整数閉区間内に存在しない
    - [x] 0から2の整数閉区間の下端点よりも小さい整数m1は、0から2の整数閉区間内に存在しない -> 仮実装
    - [x] 1から3の整数閉区間の下端点よりも小さい整数0は、1から3の整数閉区間内に存在する -> 三角測量
  - [ ] 上端点より大きい整数は整数閉区間内に存在しない

- [ ] ２つの整数閉区間オブジェクトが等価かどうかを判定出来る

- [ ] ２つの整数閉区間オブジェクトが完全に含まれるかどうか判定できる


----
1on1 fb
- 「別の閉区間と等価かどうか、完全に含まれるかどうかも判定できる」は２つの問題
- テストが失敗する事を確認
  - phpunitが動くことを確認したい
- 閉区間のクラスと同じテスト名にしたい
  - テストとクラスが１対１になるように

- 「インスタンスが作成出来る」がその他のテストに含まれるので、そこまでやらなくても良いかも
- 仕様を記述したい場合は、test~ではなく`@test`にしたほうがみやすい
- $this->markTestSkipped(); // このテストは失敗する場合に使う
  - Passにしたい場合、$this->pass()があればいいが、無いので$thi->assertTrue(true)でもOK
- Exceptionのテストはtry~catchもOK
